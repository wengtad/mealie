{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About The Project A Place for All Your Recipes View Demo \u00b7 Report Bug \u00b7 API \u00b7 Request Feature \u00b7 Docker Hub Mealie is a self hosted recipe manager and meal planner with a RestAPI backend and a reactive frontend application built in Vue for a pleasant user experience for the whole family. Easily add recipes into your database by providing the url and Mealie will automatically import the relevant data or add a family recipe with the UI editor. Mealie also provides an API for interactions from 3rd party applications. Why does my recipe manager need an API? An API allows integration into applications like Home Assistant that can act as notification engines to provide custom notifications based of Meal Plan data to remind you to defrost the chicken, marinade the steak, or start the CrockPot. Additionally, you can access any available API from the backend server. To explore the API spin up your server and navigate to http://yourserver.com/docs for interactive API documentation. Remember to join the Discord ! Note In some of the demo gifs the styling may be different than the finale application. demos were done during development prior to finale styling. Warning Note that this is a BETA release and that means things may break and or change down the line. I'll do my best to make sure that any API changes are thoughtful and necessary in order not to break things. Additionally, I'll do my best to provide a migration path if the database schema ever changes. Do not use programs like watchtower to auto update your container. You WILL run into issues if you do this, Main Features Recipes Automatic web scrapping for common recipe platforms UI recipe editor JSON recipe editor Additional recipe data custom notes ratings categories and tags total, cook, and prep time indicators View recipes by category Basic fuzzy search Migration from other platforms Chowdown Nextcloud Cookbook Meal Planner Random meal plan generation API The entire application is built on a restful API and can be accessed by the user Scheduled Webhooks Interactive API Documentation thanks to FastAPI and Swagger Custom \"API Extras\" in recipes for custom key/value pairs to extendable API uses Database Import / Export Easily import / export your recipes from the UI Export recipes in any format for universal access using Jinja2 Use the default or a custom jinja2 template Built With Vue.js Vuetify FastAPI Docker Road Map See Roadmap Contributing Contributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are greatly appreciated . Especially test. Literally any tests. See the Contributors Guide for help getting started. If you are not a coder, you can still contribute financially. financial contributions help me prioritize working on this project over others and helps me know that there is a real demand for project development. License Distributed under the MIT License. See LICENSE for more information. Contact Project Link: https://github.com/hay-kot/mealie Acknowledgements Talk Python Training for helping me learn python Academind for helping me learn Javascript and Vue.js","title":"About The Project"},{"location":"#about-the-project","text":"A Place for All Your Recipes View Demo \u00b7 Report Bug \u00b7 API \u00b7 Request Feature \u00b7 Docker Hub Mealie is a self hosted recipe manager and meal planner with a RestAPI backend and a reactive frontend application built in Vue for a pleasant user experience for the whole family. Easily add recipes into your database by providing the url and Mealie will automatically import the relevant data or add a family recipe with the UI editor. Mealie also provides an API for interactions from 3rd party applications. Why does my recipe manager need an API? An API allows integration into applications like Home Assistant that can act as notification engines to provide custom notifications based of Meal Plan data to remind you to defrost the chicken, marinade the steak, or start the CrockPot. Additionally, you can access any available API from the backend server. To explore the API spin up your server and navigate to http://yourserver.com/docs for interactive API documentation. Remember to join the Discord ! Note In some of the demo gifs the styling may be different than the finale application. demos were done during development prior to finale styling. Warning Note that this is a BETA release and that means things may break and or change down the line. I'll do my best to make sure that any API changes are thoughtful and necessary in order not to break things. Additionally, I'll do my best to provide a migration path if the database schema ever changes. Do not use programs like watchtower to auto update your container. You WILL run into issues if you do this,","title":"About The Project"},{"location":"#main-features","text":"","title":"Main Features"},{"location":"#recipes","text":"Automatic web scrapping for common recipe platforms UI recipe editor JSON recipe editor Additional recipe data custom notes ratings categories and tags total, cook, and prep time indicators View recipes by category Basic fuzzy search Migration from other platforms Chowdown Nextcloud Cookbook","title":"Recipes"},{"location":"#meal-planner","text":"Random meal plan generation","title":"Meal Planner"},{"location":"#api","text":"The entire application is built on a restful API and can be accessed by the user Scheduled Webhooks Interactive API Documentation thanks to FastAPI and Swagger Custom \"API Extras\" in recipes for custom key/value pairs to extendable API uses","title":"API"},{"location":"#database-import-export","text":"Easily import / export your recipes from the UI Export recipes in any format for universal access using Jinja2 Use the default or a custom jinja2 template","title":"Database Import / Export"},{"location":"#built-with","text":"Vue.js Vuetify FastAPI Docker","title":"Built With"},{"location":"#road-map","text":"See Roadmap","title":"Road Map"},{"location":"#contributing","text":"Contributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are greatly appreciated . Especially test. Literally any tests. See the Contributors Guide for help getting started. If you are not a coder, you can still contribute financially. financial contributions help me prioritize working on this project over others and helps me know that there is a real demand for project development.","title":"Contributing"},{"location":"#license","text":"Distributed under the MIT License. See LICENSE for more information.","title":"License"},{"location":"#contact","text":"Project Link: https://github.com/hay-kot/mealie","title":"Contact"},{"location":"#acknowledgements","text":"Talk Python Training for helping me learn python Academind for helping me learn Javascript and Vue.js","title":"Acknowledgements"},{"location":"changelog/","text":"Release Notes v0.3.0 Bug Fixes Fixed open search on / when in input. - Closes #174 Error when importing recipe: KeyError: '@type' - Closes #145 Fixed Import Issue - bhg.com - Closes #138 Scraper not working with recipe containing HowToSection - Closes #73 Features and Improvements Improved Nextcloud Imports Improved Recipe Parser! Open search with / hotkey! Database and App version are now split Unified and improved snackbar notifications New Category/Tag endpoints to filter all recipes by Category or Tag Category sidebar now has show/hide behavior on mobile Settings menu on mobile is improved Meal Planner You can now restrict recipe categories used for random meal-plan creation in the settings menu Recipe picker dialog will now display recipes when the search bar is empty Minor UI improvements Shopping lists! Shopping list can now be generated from a meal plan. Currently ingredients are split by recipes or there is a beta feature that attempts to sort them by similarity. Recipe Viewer Categories, Tags, and Notes will now be displayed below the steps on smaller screens Recipe Editor Text areas now auto grow to fit content Description, Steps, and Notes support Markdown! This includes inline html in Markdown. Imports A revamped dialog has been created to provide more information on restoring backups. Exceptions on the backend are now sent to the frontend and are easily viewable to see what went wrong when you restored a backup. This functionality will be ported over to the migrations in a future release. v0.2.1 - Hot Fixes! Features and Improvements Fixes upload image error when no photo was scrapped Fixes no last_recipe.json not updating Added markdown rendering for notes New notifications Minor UI improvements Recipe editor refactor Settings/Theme models refactor Development / Misc Added async file response for images, downloading files. Breakup recipe view component v0.2.0 - Now with Test! This is, what I think, is a big release! Tons of new features and some great quality of life improvements with some additional features. You may find that I made promises to include some fixes/features in v0.2.0. The short of is I greatly underestimated the work needed to refactor the database to a usable state and integrate categories in a way that is useful for users. This shouldn't be taken as a sign that I'm dropping those feature requests or ignoring them. I felt it was better to push a release in the current state rather than drag on development to try and fulfil all of the promises I made. Upgrade Process Database Breaks! I have not yet implemented a database migration service. As such, upgrades cannot be done by simply pulling the image. You must first export your recipes, update your deployment, and then import your recipes. This pattern is likely to be how upgrades take place prior to v1.0. After v1.0 migrations will be done automatically. Bug Fixes Remove ability to save recipe with no name Fixed data validation error on missing parameters Fixed failed database initialization at startup - Closes #98 Fixed misaligned text on various cards Fixed bug that blocked opening links in new tabs - Closes #122 Fixed router link bugs - Closes #122 Fixed navigation on keyboard selection - Closes #139 Features and Improvements \ud83d\udc33 Dockerfile now 1/5 of the size! \ud83c\udf0e UI Language Selection + Additional Supported Language Home Page By default your homepage will display only the recently added recipes. You can configured sections to show on the home-screen based of categories on the settings page. A new sidebar is now shown on the main page that lists all the categories in the database. Clicking on them navigates into a page that shows only recipes. Basic Sort functionality has been added. More options are on the way! Meal Planner Improved Search (Fuzzy Search) New Scheduled card support Recipe Editor Ingredients are now sortable via drag-and-drop Known categories now show up in the dropdown - Closes 83 Initial code for data validation to prevent errors Migrations Card based redesign Upload from the UI Unified Chowdown / Nextcloud import process. (Removed Git as a dependency) API Category and Tag endpoints added Major Endpoint refactor Improved API documentation Link to your Local API is now on your /settings/site . You can use it to explore your API. Style Continued work on button/style unification Adding icons to buttons New Color Theme Picker UI Development Fixed Vetur config file. Autocomplete in VSCode works! File/Folder restructuring Added Prettier config Fixed incorrect layout code FastAPI Route tests for major operations - WIP (shallow testing) Breaking Changes Breaking Changes API endpoints have been refactored to adhear to a more consistent standard. This is a WIP and more changes are likely to occur. Officially Dropped MongoDB Support Database Breaks! We have not yet implemented a database migration service. As such, upgrades cannot be done by simply pulling the image. You must first export your recipes, update your deployment, and then import your recipes. This pattern is likely to be how upgrades take place prior to v1.0. After v1.0 migrations will be done automatically. v0.1.0 - Initial Beta Bug Fixes Fixed Can't delete recipe after changing name - Closes Closes #67 Fixed No image when added by URL, and can't add an image - Closes Closes #66 Fixed Images saved with no way to delete when add recipe via URL fails - Closes Closes #43 Features Additional Language Support Improved deployment documentation Additional database! SQlite is now supported! - Closes #48 All site data is now backed up. Support for Prep Time, Total Time, and Cook Time field - Closes #63 New backup import process with support for themes and site settings BETA ARM support! - Closes #69 Code / Developer Improvements Unified Database Access Layers Poetry / pyproject.toml support over requirements.txt Local development without database is now possible! Local mkdocs server added to docker-compose.dev.yml Major code refactoring to support new database layer Global variable refactor Breaking Changes Internal docker port is now 80 instead of 9000. You MUST remap the internal port to connect to the UI. Breaking Changes As I've adopted the SQL database model I find that using 2 different types of databases will inevitably hinder development. As such after release v0.1.0 support for mongoDB will no longer be available. Prior to upgrading to v0.2.0 you will need to export your site and import after updating. This should be a painless process and require minimal intervention on the users part. Moving forward we will do our best to minimize changes that require user intervention like this and make updates a smooth process. v0.0.2 - Pre-release Second Patch A quality update with major props to zackbcom for working hard on making the theming just that much better! Bug Fixes Fixed empty backup failure without markdown template Fixed opacity issues with marked steps - mtoohey31 Fixed hot-reloading development environment - grssmnn Fixed recipe not saving without image - Closes #7 + Closes #54 Fixed parsing error on image property null - Closes #43 General Improvements Added Confirmation component to deleting recipes - zackbcom Updated Theme backend - zackbcom Added Persistent storage to vuex - zackbcom General Color/Theme Improvements More consistent UI More minimalist coloring Added API key extras to Recipe Data - See Documentation Users can now add custom json key/value pairs to all recipes via the editor for access in 3rd part applications. For example users can add a \"message\" field in the extras that can be accessed on API calls to play a message over google home. Improved image rendering (nearly x2 speed) Improved documentation + API Documentation Improved recipe parsing - Closes #51 User feedback on backup importing v0.0.1 - Pre-release Patch General Updated Favicon Renamed Frontend Window Added Debug folder to dump scraper data prior to processing. Recipes Added user feedback on bad URL Better backend data validation for updating recipes, avoid small syntax errors corrupting database entry. Closes #8 Fixed spacing Closes while editing new recipes in JSON v0.0.0 - Initial Pre-release The initial pre-release. It should be semi-functional but does not include a lot of user feedback You may notice errors that have no user feedback and have no idea what went wrong. Recipes Automatic web scrapping for common recipe platforms Interactive API Documentation thanks to FastAPI and Swagger UI Recipe Editor JSON Recipe Editor in browser Custom tags and categories Rate recipes Add notes to recipes Migration From Other Platforms Chowdown Meal Planner Random Meal plan generation based off categories Expose notes in the API to allow external applications to access relevant information for meal plans Database Import / Export Easily Import / Export your recipes from the UI Export recipes in markdown format for universal access Use the default or a custom jinja2 template","title":"Change Log"},{"location":"changelog/#release-notes","text":"","title":"Release Notes"},{"location":"changelog/#v030","text":"","title":"v0.3.0"},{"location":"changelog/#bug-fixes","text":"Fixed open search on / when in input. - Closes #174 Error when importing recipe: KeyError: '@type' - Closes #145 Fixed Import Issue - bhg.com - Closes #138 Scraper not working with recipe containing HowToSection - Closes #73","title":"Bug Fixes"},{"location":"changelog/#features-and-improvements","text":"Improved Nextcloud Imports Improved Recipe Parser! Open search with / hotkey! Database and App version are now split Unified and improved snackbar notifications New Category/Tag endpoints to filter all recipes by Category or Tag Category sidebar now has show/hide behavior on mobile Settings menu on mobile is improved Meal Planner You can now restrict recipe categories used for random meal-plan creation in the settings menu Recipe picker dialog will now display recipes when the search bar is empty Minor UI improvements Shopping lists! Shopping list can now be generated from a meal plan. Currently ingredients are split by recipes or there is a beta feature that attempts to sort them by similarity. Recipe Viewer Categories, Tags, and Notes will now be displayed below the steps on smaller screens Recipe Editor Text areas now auto grow to fit content Description, Steps, and Notes support Markdown! This includes inline html in Markdown. Imports A revamped dialog has been created to provide more information on restoring backups. Exceptions on the backend are now sent to the frontend and are easily viewable to see what went wrong when you restored a backup. This functionality will be ported over to the migrations in a future release.","title":"Features and Improvements"},{"location":"changelog/#v021-hot-fixes","text":"","title":"v0.2.1 - Hot Fixes!"},{"location":"changelog/#features-and-improvements_1","text":"Fixes upload image error when no photo was scrapped Fixes no last_recipe.json not updating Added markdown rendering for notes New notifications Minor UI improvements Recipe editor refactor Settings/Theme models refactor","title":"Features and Improvements"},{"location":"changelog/#development-misc","text":"Added async file response for images, downloading files. Breakup recipe view component","title":"Development / Misc"},{"location":"changelog/#v020-now-with-test","text":"This is, what I think, is a big release! Tons of new features and some great quality of life improvements with some additional features. You may find that I made promises to include some fixes/features in v0.2.0. The short of is I greatly underestimated the work needed to refactor the database to a usable state and integrate categories in a way that is useful for users. This shouldn't be taken as a sign that I'm dropping those feature requests or ignoring them. I felt it was better to push a release in the current state rather than drag on development to try and fulfil all of the promises I made. Upgrade Process Database Breaks! I have not yet implemented a database migration service. As such, upgrades cannot be done by simply pulling the image. You must first export your recipes, update your deployment, and then import your recipes. This pattern is likely to be how upgrades take place prior to v1.0. After v1.0 migrations will be done automatically.","title":"v0.2.0 - Now with Test!"},{"location":"changelog/#bug-fixes_1","text":"Remove ability to save recipe with no name Fixed data validation error on missing parameters Fixed failed database initialization at startup - Closes #98 Fixed misaligned text on various cards Fixed bug that blocked opening links in new tabs - Closes #122 Fixed router link bugs - Closes #122 Fixed navigation on keyboard selection - Closes #139","title":"Bug Fixes"},{"location":"changelog/#features-and-improvements_2","text":"\ud83d\udc33 Dockerfile now 1/5 of the size! \ud83c\udf0e UI Language Selection + Additional Supported Language Home Page By default your homepage will display only the recently added recipes. You can configured sections to show on the home-screen based of categories on the settings page. A new sidebar is now shown on the main page that lists all the categories in the database. Clicking on them navigates into a page that shows only recipes. Basic Sort functionality has been added. More options are on the way! Meal Planner Improved Search (Fuzzy Search) New Scheduled card support Recipe Editor Ingredients are now sortable via drag-and-drop Known categories now show up in the dropdown - Closes 83 Initial code for data validation to prevent errors Migrations Card based redesign Upload from the UI Unified Chowdown / Nextcloud import process. (Removed Git as a dependency) API Category and Tag endpoints added Major Endpoint refactor Improved API documentation Link to your Local API is now on your /settings/site . You can use it to explore your API. Style Continued work on button/style unification Adding icons to buttons New Color Theme Picker UI","title":"Features and Improvements"},{"location":"changelog/#development","text":"Fixed Vetur config file. Autocomplete in VSCode works! File/Folder restructuring Added Prettier config Fixed incorrect layout code FastAPI Route tests for major operations - WIP (shallow testing)","title":"Development"},{"location":"changelog/#breaking-changes","text":"Breaking Changes API endpoints have been refactored to adhear to a more consistent standard. This is a WIP and more changes are likely to occur. Officially Dropped MongoDB Support Database Breaks! We have not yet implemented a database migration service. As such, upgrades cannot be done by simply pulling the image. You must first export your recipes, update your deployment, and then import your recipes. This pattern is likely to be how upgrades take place prior to v1.0. After v1.0 migrations will be done automatically.","title":"Breaking Changes"},{"location":"changelog/#v010-initial-beta","text":"","title":"v0.1.0 - Initial Beta"},{"location":"changelog/#bug-fixes_2","text":"Fixed Can't delete recipe after changing name - Closes Closes #67 Fixed No image when added by URL, and can't add an image - Closes Closes #66 Fixed Images saved with no way to delete when add recipe via URL fails - Closes Closes #43","title":"Bug Fixes"},{"location":"changelog/#features","text":"Additional Language Support Improved deployment documentation Additional database! SQlite is now supported! - Closes #48 All site data is now backed up. Support for Prep Time, Total Time, and Cook Time field - Closes #63 New backup import process with support for themes and site settings BETA ARM support! - Closes #69","title":"Features"},{"location":"changelog/#code-developer-improvements","text":"Unified Database Access Layers Poetry / pyproject.toml support over requirements.txt Local development without database is now possible! Local mkdocs server added to docker-compose.dev.yml Major code refactoring to support new database layer Global variable refactor","title":"Code / Developer Improvements"},{"location":"changelog/#breaking-changes_1","text":"Internal docker port is now 80 instead of 9000. You MUST remap the internal port to connect to the UI. Breaking Changes As I've adopted the SQL database model I find that using 2 different types of databases will inevitably hinder development. As such after release v0.1.0 support for mongoDB will no longer be available. Prior to upgrading to v0.2.0 you will need to export your site and import after updating. This should be a painless process and require minimal intervention on the users part. Moving forward we will do our best to minimize changes that require user intervention like this and make updates a smooth process.","title":"Breaking Changes"},{"location":"changelog/#v002-pre-release-second-patch","text":"A quality update with major props to zackbcom for working hard on making the theming just that much better!","title":"v0.0.2 - Pre-release Second Patch"},{"location":"changelog/#bug-fixes_3","text":"Fixed empty backup failure without markdown template Fixed opacity issues with marked steps - mtoohey31 Fixed hot-reloading development environment - grssmnn Fixed recipe not saving without image - Closes #7 + Closes #54 Fixed parsing error on image property null - Closes #43","title":"Bug Fixes"},{"location":"changelog/#general-improvements","text":"Added Confirmation component to deleting recipes - zackbcom Updated Theme backend - zackbcom Added Persistent storage to vuex - zackbcom General Color/Theme Improvements More consistent UI More minimalist coloring Added API key extras to Recipe Data - See Documentation Users can now add custom json key/value pairs to all recipes via the editor for access in 3rd part applications. For example users can add a \"message\" field in the extras that can be accessed on API calls to play a message over google home. Improved image rendering (nearly x2 speed) Improved documentation + API Documentation Improved recipe parsing - Closes #51 User feedback on backup importing","title":"General Improvements"},{"location":"changelog/#v001-pre-release-patch","text":"","title":"v0.0.1 - Pre-release Patch"},{"location":"changelog/#general","text":"Updated Favicon Renamed Frontend Window Added Debug folder to dump scraper data prior to processing.","title":"General"},{"location":"changelog/#recipes","text":"Added user feedback on bad URL Better backend data validation for updating recipes, avoid small syntax errors corrupting database entry. Closes #8 Fixed spacing Closes while editing new recipes in JSON","title":"Recipes"},{"location":"changelog/#v000-initial-pre-release","text":"The initial pre-release. It should be semi-functional but does not include a lot of user feedback You may notice errors that have no user feedback and have no idea what went wrong.","title":"v0.0.0 - Initial Pre-release"},{"location":"changelog/#recipes_1","text":"Automatic web scrapping for common recipe platforms Interactive API Documentation thanks to FastAPI and Swagger UI Recipe Editor JSON Recipe Editor in browser Custom tags and categories Rate recipes Add notes to recipes Migration From Other Platforms Chowdown","title":"Recipes"},{"location":"changelog/#meal-planner","text":"Random Meal plan generation based off categories Expose notes in the API to allow external applications to access relevant information for meal plans","title":"Meal Planner"},{"location":"changelog/#database-import-export","text":"Easily Import / Export your recipes from the UI Export recipes in markdown format for universal access Use the default or a custom jinja2 template","title":"Database Import / Export"},{"location":"roadmap/","text":"Development Road Map See the Github META issue for tracking the Road Map","title":"Development Road Map"},{"location":"roadmap/#development-road-map","text":"See the Github META issue for tracking the Road Map","title":"Development Road Map"},{"location":"api/api-usage/","text":"Usage Key Components Recipe Extras Recipes extras are a key feature of the Mealie API. They allow you to create custom json key/value pairs within a recipe to reference from 3rd part applications. You can use these keys to contain information to trigger automation or custom messages to relay to your desired device. For example you could add {\"message\": \"Remember to thaw the chicken\"} to a recipe and use the webhooks built into mealie to send that message payload to a destination to be processed. Examples Have Ideas? Submit a PR!","title":"API Usage"},{"location":"api/api-usage/#usage","text":"","title":"Usage"},{"location":"api/api-usage/#key-components","text":"","title":"Key Components"},{"location":"api/api-usage/#recipe-extras","text":"Recipes extras are a key feature of the Mealie API. They allow you to create custom json key/value pairs within a recipe to reference from 3rd part applications. You can use these keys to contain information to trigger automation or custom messages to relay to your desired device. For example you could add {\"message\": \"Remember to thaw the chicken\"} to a recipe and use the webhooks built into mealie to send that message payload to a destination to be processed.","title":"Recipe Extras"},{"location":"api/api-usage/#examples","text":"Have Ideas? Submit a PR!","title":"Examples"},{"location":"contributors/non-coders/","text":"Non-Code Contributions We love your input! We want to make contributing to this project as easy and transparent as possible, whether it's: Reporting a bug Discussing the current state of the code Submitting a fix Proposing new features Becoming a maintainer Help translate to a new language or improve current translations Remember to join the Discord and stay in touch with other developers working on the project ! Additionally, you can buy me a coffee and support the project. When I get financial support it helps me know that there's real interest in the project and that it's worth the time to keep developing.","title":"Non-Code"},{"location":"contributors/non-coders/#non-code-contributions","text":"We love your input! We want to make contributing to this project as easy and transparent as possible, whether it's: Reporting a bug Discussing the current state of the code Submitting a fix Proposing new features Becoming a maintainer Help translate to a new language or improve current translations Remember to join the Discord and stay in touch with other developers working on the project ! Additionally, you can buy me a coffee and support the project. When I get financial support it helps me know that there's real interest in the project and that it's worth the time to keep developing.","title":"Non-Code Contributions"},{"location":"contributors/translating/","text":"Contributing with translations Having Mealie in different language could help the adaption of Mealie. Translations can be a great way for non-coders to contribute to Mealie. Is Mealie missing in your language? If your language is missing, you can add it, by beginning to translate. We use a Vue-i18n in json files. Copy frontend/src/locales/en.json to get started. Improving translations If your language is missing the translation for some strings, you can help out by adding a translation for that string. If you find a string you think could be improved, please feel free to do so. Tooling Currently we use Vue-i18n for translations. Translations are stored in json format located in frontend/src/locales . If you have experience with a good Translation Management System, please feel free to chime in on the Discord , as such a system could be helpful as the projects grow. Until then, i18n Ally for VScode is recommended to aid in translating. It also has a nice feature, which shows translations in-place when editing code. i18n Ally will also show which languages is missing translations.","title":"Translating"},{"location":"contributors/translating/#contributing-with-translations","text":"Having Mealie in different language could help the adaption of Mealie. Translations can be a great way for non-coders to contribute to Mealie.","title":"Contributing with translations"},{"location":"contributors/translating/#is-mealie-missing-in-your-language","text":"If your language is missing, you can add it, by beginning to translate. We use a Vue-i18n in json files. Copy frontend/src/locales/en.json to get started.","title":"Is Mealie missing in your language?"},{"location":"contributors/translating/#improving-translations","text":"If your language is missing the translation for some strings, you can help out by adding a translation for that string. If you find a string you think could be improved, please feel free to do so.","title":"Improving translations"},{"location":"contributors/translating/#tooling","text":"Currently we use Vue-i18n for translations. Translations are stored in json format located in frontend/src/locales . If you have experience with a good Translation Management System, please feel free to chime in on the Discord , as such a system could be helpful as the projects grow. Until then, i18n Ally for VScode is recommended to aid in translating. It also has a nice feature, which shows translations in-place when editing code. i18n Ally will also show which languages is missing translations.","title":"Tooling"},{"location":"contributors/developers-guide/code-contributions/","text":"Contributing to Mealie Warning It should be known going into this that this is my first open source project, and my first public github repo I'm actively managing. If something does not make sense, or is not best practice. PLEASE feel free to reach out and let me know. I'm all about improving workflow and making it easier for contributors. Please Join the Discord . We are building a community of developers working on the project. We Develop with Github We use github to host code, to track issues and feature requests, as well as accept pull requests. We Use Github Flow , So All Code Changes Happen Through Pull Requests Pull requests are the best way to propose changes to the codebase (we use Github Flow ). We actively welcome your pull requests: Fork the repo and create your branch from dev . Read the page in in dev/dev-notes.md to get an idea on where the project is at. If you're interested on working on major changes please get in touch on discord and coordinate with other developers. No sense in doubling up on work if someones already on it. If you've changed APIs, update the documentation. Issue that pull request! If you make changes to the dev branch reflect those changes in the dev/dev-notes.md to keep track of changes. Don't forget to add your name/handle/identifier! Any contributions you make will be under the MIT Software License In short, when you submit code changes, your submissions are understood to be under the same MIT License that covers the project. Feel free to contact the maintainers if that's a concern. Report bugs using Github's issues We use GitHub issues to track public bugs. Report a bug by opening a new issue ; it's that easy! Write bug reports with detail, background, and sample code Great Bug Reports tend to have: A quick summary and/or background Steps to reproduce Be specific! Give sample code if you can. This stackoverflow question includes sample code that anyone with a base R setup can run to reproduce what I was seeing What you expected would happen What actually happens Notes (possibly including why you think this might be happening, or stuff you tried that didn't work) People love thorough bug reports. I'm not even kidding. License By contributing, you agree that your contributions will be licensed under its MIT License. References This document was adapted from the open-source contribution guidelines for Facebook's Draft","title":"Code Contributions"},{"location":"contributors/developers-guide/code-contributions/#contributing-to-mealie","text":"Warning It should be known going into this that this is my first open source project, and my first public github repo I'm actively managing. If something does not make sense, or is not best practice. PLEASE feel free to reach out and let me know. I'm all about improving workflow and making it easier for contributors. Please Join the Discord . We are building a community of developers working on the project.","title":"Contributing to Mealie"},{"location":"contributors/developers-guide/code-contributions/#we-develop-with-github","text":"We use github to host code, to track issues and feature requests, as well as accept pull requests.","title":"We Develop with Github"},{"location":"contributors/developers-guide/code-contributions/#we-use-github-flow-so-all-code-changes-happen-through-pull-requests","text":"Pull requests are the best way to propose changes to the codebase (we use Github Flow ). We actively welcome your pull requests: Fork the repo and create your branch from dev . Read the page in in dev/dev-notes.md to get an idea on where the project is at. If you're interested on working on major changes please get in touch on discord and coordinate with other developers. No sense in doubling up on work if someones already on it. If you've changed APIs, update the documentation. Issue that pull request! If you make changes to the dev branch reflect those changes in the dev/dev-notes.md to keep track of changes. Don't forget to add your name/handle/identifier!","title":"We Use Github Flow, So All Code Changes Happen Through Pull Requests"},{"location":"contributors/developers-guide/code-contributions/#any-contributions-you-make-will-be-under-the-mit-software-license","text":"In short, when you submit code changes, your submissions are understood to be under the same MIT License that covers the project. Feel free to contact the maintainers if that's a concern.","title":"Any contributions you make will be under the MIT Software License"},{"location":"contributors/developers-guide/code-contributions/#report-bugs-using-githubs-issues","text":"We use GitHub issues to track public bugs. Report a bug by opening a new issue ; it's that easy!","title":"Report bugs using Github's issues"},{"location":"contributors/developers-guide/code-contributions/#write-bug-reports-with-detail-background-and-sample-code","text":"Great Bug Reports tend to have: A quick summary and/or background Steps to reproduce Be specific! Give sample code if you can. This stackoverflow question includes sample code that anyone with a base R setup can run to reproduce what I was seeing What you expected would happen What actually happens Notes (possibly including why you think this might be happening, or stuff you tried that didn't work) People love thorough bug reports. I'm not even kidding.","title":"Write bug reports with detail, background, and sample code"},{"location":"contributors/developers-guide/code-contributions/#license","text":"By contributing, you agree that your contributions will be licensed under its MIT License.","title":"License"},{"location":"contributors/developers-guide/code-contributions/#references","text":"This document was adapted from the open-source contribution guidelines for Facebook's Draft","title":"References"},{"location":"contributors/developers-guide/general-guidelines/","text":"Guidelines TODO","title":"Guidelines"},{"location":"contributors/developers-guide/general-guidelines/#guidelines","text":"TODO","title":"Guidelines"},{"location":"contributors/developers-guide/starting-dev-server/","text":"Development: Getting Started After reading through the Code Contributions Guide and forking the repo you can start working. This project is developed with docker and as such you will be greatly aided by using docker for development. It's not necessary but it is helpful. With Docker cd into frontend directory and run npm install to install the node modules. There are 2 scripts to help set up the docker containers in dev/scripts/. docker-compose.dev.sh - Will spin up a docker development server docker-compose.sh - Will spin up a docker production server There are VSCode tasks created in the .vscode folder. You can use these to quickly execute the scripts above using the command palette. Without Docker Prerequisites Python 3.8+ Poetry Nodejs npm change directories into the mealie directory and run poetry install. cd into the frontend directory and run npm install. After installing dependencies, you can use vscode tasks to run the front and backend server. Use the command pallette to access the tasks. Alternatively you can run npm run serve in the frontend directory and python app.py in the mealie directory to get everything up and running for development. Trouble Shooting Symptom: Vue Development Server Wont Start Error: TypeError: Cannot read property 'upgrade' of undefined Solution: You may be missing the /frontend/.env.development. The contents should be VUE_APP_API_BASE_URL=http://127.0.0.1:9921 . This is a reference to proxy the the API requests from Vue to 127.0.0.1 at port 9921 where FastAPI should be running. Symptom: FastAPI Development Server Wont Start Error: RuntimeError: Directory '/app/dist' does not exist Solution: Create an empty /mealie/dist directory. This directory is served as static content by FastAPI. It is provided during the build process and may be missing in development. Run into another issue? Ask for help on discord","title":"Dev Getting Started"},{"location":"contributors/developers-guide/starting-dev-server/#development-getting-started","text":"After reading through the Code Contributions Guide and forking the repo you can start working. This project is developed with docker and as such you will be greatly aided by using docker for development. It's not necessary but it is helpful.","title":"Development: Getting Started"},{"location":"contributors/developers-guide/starting-dev-server/#with-docker","text":"cd into frontend directory and run npm install to install the node modules. There are 2 scripts to help set up the docker containers in dev/scripts/. docker-compose.dev.sh - Will spin up a docker development server docker-compose.sh - Will spin up a docker production server There are VSCode tasks created in the .vscode folder. You can use these to quickly execute the scripts above using the command palette.","title":"With Docker"},{"location":"contributors/developers-guide/starting-dev-server/#without-docker","text":"Prerequisites Python 3.8+ Poetry Nodejs npm change directories into the mealie directory and run poetry install. cd into the frontend directory and run npm install. After installing dependencies, you can use vscode tasks to run the front and backend server. Use the command pallette to access the tasks. Alternatively you can run npm run serve in the frontend directory and python app.py in the mealie directory to get everything up and running for development.","title":"Without Docker"},{"location":"contributors/developers-guide/starting-dev-server/#trouble-shooting","text":"Symptom: Vue Development Server Wont Start Error: TypeError: Cannot read property 'upgrade' of undefined Solution: You may be missing the /frontend/.env.development. The contents should be VUE_APP_API_BASE_URL=http://127.0.0.1:9921 . This is a reference to proxy the the API requests from Vue to 127.0.0.1 at port 9921 where FastAPI should be running. Symptom: FastAPI Development Server Wont Start Error: RuntimeError: Directory '/app/dist' does not exist Solution: Create an empty /mealie/dist directory. This directory is served as static content by FastAPI. It is provided during the build process and may be missing in development. Run into another issue? Ask for help on discord","title":"Trouble Shooting"},{"location":"getting-started/backups-and-exports/","text":"Backup and Imports All recipe data can be imported and exported as necessary from the UI. Under the admin page you'll find the section for using Backups and Exports. To create an export simple add the tag and the markdown template and click Backup Recipes and your backup will be created on the server. The backup is a standard zipfile containing all the images, json files, and rendered markdown files for each recipe. Markdown files are rendered from jinja2 templates. Adding your own markdown file into the templates folder will automatically show up as an option to select when creating a backup. To view the available variables, open a recipe in the json editor. To import a backup it must be in your backups folder. If it is in the backup folder it will automatically show up as an source to restore from. Selected the desired backup and import the backup file. Custom Templating On export you can select a template to use to render files using the jinja2 syntax. This can be done to export recipes in other formats besides regular .json.Look at this example for rendering a markdown recipe using the jinja2 syntax. Input ![Recipe Image](../images/{{ recipe.image }}) # {{ recipe.name }} {{ recipe.description }} ## Ingredients {% for ingredient in recipe.recipeIngredient %} - [ ] {{ ingredient }} {% endfor %} ## Instructions {% for step in recipe.recipeInstructions %} - [ ] {{ step.text }} {% endfor %} {% for note in recipe.notes %} **{{ note.title }}:** {{ note.text }} {% endfor %} --- Tags: {{ recipe.tags }} Categories: {{ recipe.categories }} Original URL: {{ recipe.orgURL }} Output ![ Recipe Image ]( ../images/five-spice-popcorn-chicken.jpg ) # Five Spice Popcorn Chicken It\u2019s easy to rely on take-out for some of our favorite Chinese dishes. However, with the right pantry staples, dishes like this Five Spice Popcorn Chicken can become part of your go-to arsenal of recipes. This crispy chicken is coated in a creamy, tangy sauce, made zesty with The Spice Hunter Chinese Five Spice, a blend of star anise, cloves, cinnamon, fennel, and black pepper. ## Ingredients - [ ] 1 tablespoon soy sauce - [ ] 1 tablespoon sugar - [ ] 1 teaspoon The Spice Hunter\u00ae Chinese Five Spice Blend, plus more for serving - [ ] 1 clove garlic, finely grated - [ ] 1 1/2 pounds boneless skinless chicken thighs, cut into roughly 1-inch chunks - [ ] \u2153 cup cornstarch - [ ] 1 large egg, beaten - [ ] \u00be cup all-purpose flour - [ ] Canola or vegetable oil, for frying - [ ] Flaky sea salt - [ ] Scallion, thinly sliced, for serving - [ ] Sriracha mayonnaise, for serving, optional ## Instructions - [ ] In a medium bowl, whisk the soy sauce with the sugar, Chinese Five Spice, and garlic. Add the chicken and toss to coat. Let marinate 15 minutes. - [ ] Drain any excess marinade off of the chicken and toss the chicken with the cornstarch to coat. Once fully coated, add the beaten egg and toss to coat. - [ ] In a large heavy bottomed pot, heat 1-inch of oil to 350. - [ ] Place the flour in a large ziploc bag. Working in batches, transfer a few chicken pieces into the bag with the flour and toss to coat, then remove, leaving excess flour in the bag. - [ ] Carefully place the breaded chicken in the hot oil and fry, turning occasionally, until golden and cooked through about 3 to 4 minutes. - [ ] Using a slotted spoon or spider, transfer the cooked chicken to a paper towel lined plate. Season with salt and additional Chinese Five Spice seasoning. Repeat the flouring and frying with remaining chicken. - [ ] Serve with scallions, more Chinese Five Spice Blend, and optional sriracha mayonnaise. --- Tags: [] Categories: [] Original URL: https://www.bonappetit.com/recipe/five-spice-popcorn-chicken#intcid=_bon-appetit-recipe-bottom-recirc_3cad5ce9-734a-46f8-b503-78c33d2e7279_similar2-3 If you decide you don't like mealie. This is a good way to export into a format that can be imported into another.","title":"Backups and Exports"},{"location":"getting-started/backups-and-exports/#backup-and-imports","text":"All recipe data can be imported and exported as necessary from the UI. Under the admin page you'll find the section for using Backups and Exports. To create an export simple add the tag and the markdown template and click Backup Recipes and your backup will be created on the server. The backup is a standard zipfile containing all the images, json files, and rendered markdown files for each recipe. Markdown files are rendered from jinja2 templates. Adding your own markdown file into the templates folder will automatically show up as an option to select when creating a backup. To view the available variables, open a recipe in the json editor. To import a backup it must be in your backups folder. If it is in the backup folder it will automatically show up as an source to restore from. Selected the desired backup and import the backup file.","title":"Backup and Imports"},{"location":"getting-started/backups-and-exports/#custom-templating","text":"On export you can select a template to use to render files using the jinja2 syntax. This can be done to export recipes in other formats besides regular .json.Look at this example for rendering a markdown recipe using the jinja2 syntax.","title":"Custom Templating"},{"location":"getting-started/backups-and-exports/#input","text":"![Recipe Image](../images/{{ recipe.image }}) # {{ recipe.name }} {{ recipe.description }} ## Ingredients {% for ingredient in recipe.recipeIngredient %} - [ ] {{ ingredient }} {% endfor %} ## Instructions {% for step in recipe.recipeInstructions %} - [ ] {{ step.text }} {% endfor %} {% for note in recipe.notes %} **{{ note.title }}:** {{ note.text }} {% endfor %} --- Tags: {{ recipe.tags }} Categories: {{ recipe.categories }} Original URL: {{ recipe.orgURL }}","title":"Input"},{"location":"getting-started/backups-and-exports/#output","text":"![ Recipe Image ]( ../images/five-spice-popcorn-chicken.jpg ) # Five Spice Popcorn Chicken It\u2019s easy to rely on take-out for some of our favorite Chinese dishes. However, with the right pantry staples, dishes like this Five Spice Popcorn Chicken can become part of your go-to arsenal of recipes. This crispy chicken is coated in a creamy, tangy sauce, made zesty with The Spice Hunter Chinese Five Spice, a blend of star anise, cloves, cinnamon, fennel, and black pepper. ## Ingredients - [ ] 1 tablespoon soy sauce - [ ] 1 tablespoon sugar - [ ] 1 teaspoon The Spice Hunter\u00ae Chinese Five Spice Blend, plus more for serving - [ ] 1 clove garlic, finely grated - [ ] 1 1/2 pounds boneless skinless chicken thighs, cut into roughly 1-inch chunks - [ ] \u2153 cup cornstarch - [ ] 1 large egg, beaten - [ ] \u00be cup all-purpose flour - [ ] Canola or vegetable oil, for frying - [ ] Flaky sea salt - [ ] Scallion, thinly sliced, for serving - [ ] Sriracha mayonnaise, for serving, optional ## Instructions - [ ] In a medium bowl, whisk the soy sauce with the sugar, Chinese Five Spice, and garlic. Add the chicken and toss to coat. Let marinate 15 minutes. - [ ] Drain any excess marinade off of the chicken and toss the chicken with the cornstarch to coat. Once fully coated, add the beaten egg and toss to coat. - [ ] In a large heavy bottomed pot, heat 1-inch of oil to 350. - [ ] Place the flour in a large ziploc bag. Working in batches, transfer a few chicken pieces into the bag with the flour and toss to coat, then remove, leaving excess flour in the bag. - [ ] Carefully place the breaded chicken in the hot oil and fry, turning occasionally, until golden and cooked through about 3 to 4 minutes. - [ ] Using a slotted spoon or spider, transfer the cooked chicken to a paper towel lined plate. Season with salt and additional Chinese Five Spice seasoning. Repeat the flouring and frying with remaining chicken. - [ ] Serve with scallions, more Chinese Five Spice Blend, and optional sriracha mayonnaise. --- Tags: [] Categories: [] Original URL: https://www.bonappetit.com/recipe/five-spice-popcorn-chicken#intcid=_bon-appetit-recipe-bottom-recirc_3cad5ce9-734a-46f8-b503-78c33d2e7279_similar2-3 If you decide you don't like mealie. This is a good way to export into a format that can be imported into another.","title":"Output"},{"location":"getting-started/iOS/","text":"Using iOS Shortcuts with Mealie User brasilikum opened an issue on the main repo about how they had created an iOS shortcut for interested users. This is a useful utility for iOS users who browse for recipes in their web browser from their devices. Don't know what an iOS shortcut is? Neither did I! Experienced iOS users may already be familiar with this utility but for the uninitiated, here is the official Apple explanation: A shortcut is a quick way to get one or more tasks done with your apps. The Shortcuts app lets you create your own shortcuts with multiple steps. For example, build a \u201cSurf Time\u201d shortcut that grabs the surf report, gives an ETA to the beach, and launches your surf music playlist. Basically it is a visual scripting language that lets a user build an automation in a guided fashion. The automation can be shared with anyone but if it is a user creation, you'll have to jump through a few hoops to make an untrusted automation work on your device. In brasilikum's shortcut, you need to make changes for it to work. Recent updates to the project have changed some of the syntax and folder structure since its original creation. Tip You may need to change the url depending on which version you're using. Recipe is now plural and there is no trailing \"/\" at the end of the string. api/recipe/create-url/ to api/recipes/create-url Having made those changes, you should now be able to share a website to the shortcut and have mealie grab all the necessary information!","title":"iOS Shortcuts"},{"location":"getting-started/iOS/#using-ios-shortcuts-with-mealie","text":"User brasilikum opened an issue on the main repo about how they had created an iOS shortcut for interested users. This is a useful utility for iOS users who browse for recipes in their web browser from their devices. Don't know what an iOS shortcut is? Neither did I! Experienced iOS users may already be familiar with this utility but for the uninitiated, here is the official Apple explanation: A shortcut is a quick way to get one or more tasks done with your apps. The Shortcuts app lets you create your own shortcuts with multiple steps. For example, build a \u201cSurf Time\u201d shortcut that grabs the surf report, gives an ETA to the beach, and launches your surf music playlist. Basically it is a visual scripting language that lets a user build an automation in a guided fashion. The automation can be shared with anyone but if it is a user creation, you'll have to jump through a few hoops to make an untrusted automation work on your device. In brasilikum's shortcut, you need to make changes for it to work. Recent updates to the project have changed some of the syntax and folder structure since its original creation. Tip You may need to change the url depending on which version you're using. Recipe is now plural and there is no trailing \"/\" at the end of the string. api/recipe/create-url/ to api/recipes/create-url Having made those changes, you should now be able to share a website to the shortcut and have mealie grab all the necessary information!","title":"Using iOS Shortcuts with Mealie"},{"location":"getting-started/install/","text":"Installation To deploy docker on your local network it is highly recommended to use docker to deploy the image straight from dockerhub. Using the docker-compose below you should be able to get a stack up and running easily by changing a few default values and deploying. Currently only SQLite is supported. Postrgres support is planned, however for most loads you may find SQLite performant enough. Get Docker Mealie Docker Image Quick Start - Docker CLI Deployment with the Docker CLI can be done with docker run and specify the database type, in this case sqlite , setting the exposed port 9000 , mounting the current directory, and pull the latest image. After the image is up an running you can navigate to http://your.ip.addres:9000 and you'll should see mealie up and running! docker run \\ -e db_type = 'sqlite' \\ -p 9000 :80 \\ -v ` pwd ` : '/app/data/' \\ hkotel/mealie:latest Docker Compose with SQLite Deployment with docker-compose is the recommended method for deployment. The example below will create an instance of mealie available on port 9000 with the data volume mounted from the local directory. To use, create a docker-compose.yml file, paste the contents below and save. In the terminal run docker-compose up -d to start the container. version : \"3.1\" services : mealie : container_name : mealie image : hkotel/mealie:latest restart : always ports : - 9000:80 environment : db_type : sqlite TZ : America/Anchorage volumes : - ./mealie/data/:/app/data Env Variables Variables default description db_type sqlite The database type to be used. Current Options 'sqlite' mealie_port 9000 The port exposed by mealie. do not change this if you're running in docker If you'd like to use another port, map 9000 to another port of the host. api_docs True Turns on/off access to the API documentation locally. TZ UTC You should set your time zone accordingly so the date/time features work correctly Deployed as a Python Application Alternatively, this project is built on Python and SQLite. If you are dead set on deploying on a linux machine you can run this in an python virtual env. Provided that you know thats how you want to host the application, I'll assume you know how to do that. I may or may not get around to writing this guide. I'm open to pull requests if anyone has a good guide on it.","title":"Installation"},{"location":"getting-started/install/#installation","text":"To deploy docker on your local network it is highly recommended to use docker to deploy the image straight from dockerhub. Using the docker-compose below you should be able to get a stack up and running easily by changing a few default values and deploying. Currently only SQLite is supported. Postrgres support is planned, however for most loads you may find SQLite performant enough. Get Docker Mealie Docker Image","title":"Installation"},{"location":"getting-started/install/#quick-start-docker-cli","text":"Deployment with the Docker CLI can be done with docker run and specify the database type, in this case sqlite , setting the exposed port 9000 , mounting the current directory, and pull the latest image. After the image is up an running you can navigate to http://your.ip.addres:9000 and you'll should see mealie up and running! docker run \\ -e db_type = 'sqlite' \\ -p 9000 :80 \\ -v ` pwd ` : '/app/data/' \\ hkotel/mealie:latest","title":"Quick Start - Docker CLI"},{"location":"getting-started/install/#docker-compose-with-sqlite","text":"Deployment with docker-compose is the recommended method for deployment. The example below will create an instance of mealie available on port 9000 with the data volume mounted from the local directory. To use, create a docker-compose.yml file, paste the contents below and save. In the terminal run docker-compose up -d to start the container. version : \"3.1\" services : mealie : container_name : mealie image : hkotel/mealie:latest restart : always ports : - 9000:80 environment : db_type : sqlite TZ : America/Anchorage volumes : - ./mealie/data/:/app/data","title":"Docker Compose with SQLite"},{"location":"getting-started/install/#env-variables","text":"Variables default description db_type sqlite The database type to be used. Current Options 'sqlite' mealie_port 9000 The port exposed by mealie. do not change this if you're running in docker If you'd like to use another port, map 9000 to another port of the host. api_docs True Turns on/off access to the API documentation locally. TZ UTC You should set your time zone accordingly so the date/time features work correctly","title":"Env Variables"},{"location":"getting-started/install/#deployed-as-a-python-application","text":"Alternatively, this project is built on Python and SQLite. If you are dead set on deploying on a linux machine you can run this in an python virtual env. Provided that you know thats how you want to host the application, I'll assume you know how to do that. I may or may not get around to writing this guide. I'm open to pull requests if anyone has a good guide on it.","title":"Deployed as a Python Application"},{"location":"getting-started/meal-planner/","text":"Meal Planner Working with Meal Plans In Mealie you can create a meal plan based off the calendar inputs on the meal planner page. There is no limit to how long or how short a meal plan is. You may also create duplicate meal plans for the same date range. After selecting your date range, click on the card for each day and search through recipes to find your choice. After selecting a recipe for all meals save the plan. You can also randomly generate meal plans. To edit the meal in a meal plan simply select the edit button on the card in the timeline. Similarly, to delete a meal plan click the delete button on the card in the timeline. Currently there is no support to change the date range in a meal plan. Shopping Lists For any meal plan created you can view a breakdown of all the ingredients and use an experimental sort function to sort similarly ingredients. This is a very new feature and results of the auto sort may vary.","title":"Planning Meals"},{"location":"getting-started/meal-planner/#meal-planner","text":"","title":"Meal Planner"},{"location":"getting-started/meal-planner/#working-with-meal-plans","text":"In Mealie you can create a meal plan based off the calendar inputs on the meal planner page. There is no limit to how long or how short a meal plan is. You may also create duplicate meal plans for the same date range. After selecting your date range, click on the card for each day and search through recipes to find your choice. After selecting a recipe for all meals save the plan. You can also randomly generate meal plans. To edit the meal in a meal plan simply select the edit button on the card in the timeline. Similarly, to delete a meal plan click the delete button on the card in the timeline. Currently there is no support to change the date range in a meal plan.","title":"Working with Meal Plans"},{"location":"getting-started/meal-planner/#shopping-lists","text":"For any meal plan created you can view a breakdown of all the ingredients and use an experimental sort function to sort similarly ingredients. This is a very new feature and results of the auto sort may vary.","title":"Shopping Lists"},{"location":"getting-started/migration-imports/","text":"Migration Chowdown To migrate recipes from a Chowdown 1. Download the code repository as a .zip file 2. Upload the .zip file in the Chowdown section in Mealie 3. Select import on the newly available migration. Nextcloud Recipes Nextcloud recipes can be imported from a zip file the contains the data stored in Nextcloud. The zip file can be uploaded from the frontend or placed in the data/migrations/nextcloud directory. See the example folder structure below to ensure your recipes are able to be imported. nextcloud_recipes.zip \u251c\u2500\u2500 recipe_1 \u2502 \u251c\u2500\u2500 recipe.json \u2502 \u251c\u2500\u2500 full.jpg \u2502 \u2514\u2500\u2500 thumb.jpg \u251c\u2500\u2500 recipe_2 \u2502 \u251c\u2500\u2500 recipe.json \u2502 \u2514\u2500\u2500 full.jpg \u2514\u2500\u2500 recipe_3 \u2514\u2500\u2500 recipe.json","title":"Recipe Migration"},{"location":"getting-started/migration-imports/#migration","text":"","title":"Migration"},{"location":"getting-started/migration-imports/#chowdown","text":"To migrate recipes from a Chowdown 1. Download the code repository as a .zip file 2. Upload the .zip file in the Chowdown section in Mealie 3. Select import on the newly available migration.","title":"Chowdown"},{"location":"getting-started/migration-imports/#nextcloud-recipes","text":"Nextcloud recipes can be imported from a zip file the contains the data stored in Nextcloud. The zip file can be uploaded from the frontend or placed in the data/migrations/nextcloud directory. See the example folder structure below to ensure your recipes are able to be imported. nextcloud_recipes.zip \u251c\u2500\u2500 recipe_1 \u2502 \u251c\u2500\u2500 recipe.json \u2502 \u251c\u2500\u2500 full.jpg \u2502 \u2514\u2500\u2500 thumb.jpg \u251c\u2500\u2500 recipe_2 \u2502 \u251c\u2500\u2500 recipe.json \u2502 \u2514\u2500\u2500 full.jpg \u2514\u2500\u2500 recipe_3 \u2514\u2500\u2500 recipe.json","title":"Nextcloud Recipes"},{"location":"getting-started/recipes/","text":"Recipes URL Import Adding a recipe can be as easy as copying the recipe URL into mealie and letting the web scrapper try to pull down the information. Currently this scraper is implemented with scrape-schema-recipe package . You may have mixed results on some websites, especially with blogs or non specific recipe websites. See the bulk import Option below for another a convenient way to add blog style recipes into Mealie. Recipe Editor Recipes can be edited and created via the UI. This is done with both a form based approach where you have a UI to work with as well as with a in browser JSON Editor. The JSON editor allows you to easily copy and paste data from other sources. You can also add a custom recipe with the UI editor built into the web view. Bulk Import Mealie also supports bulk import of recipe instructions and ingredients. Select \"Bulk Add\" in the editor and paste in your plain text data to be parsed. Each line is treated as one entry and will be appended to the existing ingredients or instructions if they exist. Empty lines will be stripped from the text. Schema Recipes are stored in the json-like format in mongoDB and then sent and edited in json format on the frontend. Each recipes uses Recipe Schema as a general guide with some additional properties specific to Mealie. Example { _id : Objec t Id(' 5 f cdc 3 d 715 f 131e8 b 191 f 642 ') , na me : 'Oa t a n d Peca n Bri ttle Cookies' , descrip t io n : 'A gorgeously te x ture d cookie wi t h crispy -e dges , a chewy ce nter , t oas t y peca ns , a n d t i n y crispy peca n bri ttle bi ts t hroughou t .' , image : 'oa t - a n d - peca n - bri ttle - cookies.jpg' , recipeYield : 'Makes abou t 18 ' , recipeI n gredie nt : [ ' 1 \u00bc cups ( 142 g) coarsely chopped peca ns ' , '\u00be cup ( 150 g) gra nulate d sugar' , ' 4 Tbsp. (\u00bd s t ick) u nsalte d bu tter ' , '\u00bd ts p. baki n g soda' , '\u00bd ts p. Diamo n d Crys tal or \u00bc ts p. Mor t o n kosher sal t ' , ' 1 cup ( 2 s t icks) u nsalte d bu tter , cu t i nt o 16 pieces , divided' , ' 1 \u2153 cups ( 173 g) all - purpose fl our' , ' 2 ts p. Diamo n d Crys tal or 1 ts p. Mor t o n kosher sal t ' , ' 1 ts p. baki n g soda' , ' 2 cups ( 200 g) old - fas hio ne d oa ts , divided' , '\u00be cup (packed; 150 g) dark brow n sugar' , '\u00bd cup ( 100 g) gra nulate d sugar' , ' 2 large eggs' , ' 1 Tbsp. va n illa ex tra c t ' ], recipeI nstru c t io ns : [ { '@ t ype' : 'HowToS te p' , te x t : 'Place a rack i n middle o f ove n ; prehea t t o 350 \u00b0. Toas t peca ns o n a small rimmed baki n g shee t , t ossi n g hal f way t hrough , u nt il sligh tl y darke ne d a n d fra gra nt , 8 \u2013 10 mi nutes . Le t cool.' }, { '@ t ype' : 'HowToS te p' , te x t : 'Li ne a n o t her small rimmed baki n g shee t wi t h a Silpa t baki n g ma t . Cook gra nulate d sugar , bu tter , a n d 2 Tbsp. wa ter i n a small saucepa n over medium - low hea t , s t irri n g ge ntl y wi t h a hea t proo f rubber spa tula , u nt il sugar is dissolved. I n crease hea t t o medium a n d bri n g syrup t o a rapid simmer. Cook , wi t hou t s t irri n g , swirli n g pa n o ften , u nt il syrup turns a deep amber color , 8 \u2013 10 mi nutes . Immedia tel y remove saucepa n fr om hea t a n d s t ir i n peca ns . O n ce peca ns are well coa te d , add baki n g soda a n d sal t a n d s t ir t o i n corpora te (mix ture will f oam a n d spu tter as baki n g soda aera tes caramel). Worki n g quickly (i t will harde n fast ) , scrape mix ture o nt o prepared baki n g shee t a n d spread i nt o a t hi n layer. Le t cool comple tel y , 5 \u2013 10 mi nutes . Chop i nt o pea - size pieces; se t aside.' }, { '@ t ype' : 'HowToS te p' , te x t : 'Place hal f o f bu tter (\u00bd cup) i n t he bowl o f a s tan d mixer. Bri n g remai n i n g bu tter t o a boil i n a small saucepa n over medium - low hea t , s t irri n g o ften wi t h a hea t proo f rubber spa tula . Cook , scrapi n g bo tt om a n d sides o f pa n co nstantl y , u nt il bu tter spu tters , f oams , a n d , eve ntuall y , you see brow ne d bi ts fl oa t i n g o n t he sur fa ce , 5 \u2013 7 mi nutes . Pour brow n bu tter over bu tter i n s tan d mixer bowl , maki n g sure t o scrape i n all t he brow ne d bi ts . Le t si t u nt il bu tter begi ns t o resolidi f y , abou t 30 mi nutes .' }, { '@ t ype' : 'HowToS te p' , te x t : 'Pulse fl our , sal t , a n d baki n g soda i n a f ood processor t o combi ne . Add hal f o f reserved peca n bri ttle a n d 1 cup oa ts ; process i n lo n g pulses u nt il oa ts a n d bri ttle are f i nel y grou n d.' }, { '@ t ype' : 'HowToS te p' , te x t : 'Add brow n sugar a n d gra nulate d sugar t o bu tter a n d bea t wi t h paddle a tta chme nt o n medium speed u nt il ligh t a n d smoo t h bu t n o t fluff y , abou t 2 mi nutes . Scrape dow n sides o f bowl a n d add eggs a n d va n illa. Bea t u nt il very ligh t a n d sa t i n y , abou t 1 mi nute . Scrape dow n sides o f bowl a n d add fl our mix ture ; bea t o n low speed u nt il n o dry spo ts remai n a n d you have a so ft , eve nl y mixed dough. Add remai n i n g hal f o f bri ttle a n d remai n i n g 1 cup oa ts ; mix o n low speed jus t t o dis tr ibu te . Fold ba tter several t imes wi t h a spa tula t o e nsure every t hi n g is eve nl y mixed.' }, { '@ t ype' : 'HowToS te p' , te x t : 'Usi n g a 2- oz. scoop or \u00bc - cup measuri n g cup , scoop level por t io ns o f dough t o make 18 cookies. Place o n a parchme nt - li ne d baki n g shee t , spaci n g as close t oge t her as possible (you\u2019ll space t hem ou t be f ore baki n g). Cover t igh tl y wi t h plas t ic wrap a n d chill a t leas t 12 hours a n d up t o 2 days. (I f you\u2019re pressed f or t ime , a couple hours will do; cookies jus t wo n \u2019 t be as chewy.)' }, { '@ t ype' : 'HowToS te p' , te x t : 'Whe n ready t o bake , place racks i n upper a n d lower t hirds o f ove n ; prehea t t o 350 \u00b0. Li ne 2 large rimmed baki n g shee ts wi t h parchme nt paper. Arra n ge 6 cookies o n each prepared baki n g shee t , spaci n g a t leas t 3 \" apart.' }, { '@type': 'HowToStep', text: 'Bake cookies, rotating baking sheets top to bottom and front to back after 12 minutes, until dark golden brown around the edges, 16\u201320 minutes. Let cookies cool 5 minutes on baking sheets, then transfer cookies to a wire rack with a spatula and let cool completely.' }, { '@type': 'HowToStep', text: 'Carefully move a rack to middle of oven. Arrange remaining dough on one of the baking sheets (it\u2019s okay if it\u2019s still warm). Bake as before (this batch might go a bit faster).\\nDo ahead: Dough can be formed 2 months ahead; chill dough balls at least 2 hours before transferring to freezer. Once frozen solid, store in resealable plastic freezer bags and keep frozen. No need to thaw before baking, but you may need to add a minute or two to the baking time. Cookies can be baked 5 days ahead; store airtight at room temperature.' } ], slug: 'oat-and-pecan-brittle-cookies', tags: [], categories: [], dateAdded: ISODate('2020-12-07T05:55:35.434Z'), notes: [], orgURL: 'https://www.bonappetit.com/recipe/oat-and-pecan-brittle-cookies', rating: 3 }","title":"Working With Recipes"},{"location":"getting-started/recipes/#recipes","text":"","title":"Recipes"},{"location":"getting-started/recipes/#url-import","text":"Adding a recipe can be as easy as copying the recipe URL into mealie and letting the web scrapper try to pull down the information. Currently this scraper is implemented with scrape-schema-recipe package . You may have mixed results on some websites, especially with blogs or non specific recipe websites. See the bulk import Option below for another a convenient way to add blog style recipes into Mealie.","title":"URL Import"},{"location":"getting-started/recipes/#recipe-editor","text":"Recipes can be edited and created via the UI. This is done with both a form based approach where you have a UI to work with as well as with a in browser JSON Editor. The JSON editor allows you to easily copy and paste data from other sources. You can also add a custom recipe with the UI editor built into the web view.","title":"Recipe Editor"},{"location":"getting-started/recipes/#bulk-import","text":"Mealie also supports bulk import of recipe instructions and ingredients. Select \"Bulk Add\" in the editor and paste in your plain text data to be parsed. Each line is treated as one entry and will be appended to the existing ingredients or instructions if they exist. Empty lines will be stripped from the text.","title":"Bulk Import"},{"location":"getting-started/recipes/#schema","text":"Recipes are stored in the json-like format in mongoDB and then sent and edited in json format on the frontend. Each recipes uses Recipe Schema as a general guide with some additional properties specific to Mealie.","title":"Schema"},{"location":"getting-started/recipes/#example","text":"{ _id : Objec t Id(' 5 f cdc 3 d 715 f 131e8 b 191 f 642 ') , na me : 'Oa t a n d Peca n Bri ttle Cookies' , descrip t io n : 'A gorgeously te x ture d cookie wi t h crispy -e dges , a chewy ce nter , t oas t y peca ns , a n d t i n y crispy peca n bri ttle bi ts t hroughou t .' , image : 'oa t - a n d - peca n - bri ttle - cookies.jpg' , recipeYield : 'Makes abou t 18 ' , recipeI n gredie nt : [ ' 1 \u00bc cups ( 142 g) coarsely chopped peca ns ' , '\u00be cup ( 150 g) gra nulate d sugar' , ' 4 Tbsp. (\u00bd s t ick) u nsalte d bu tter ' , '\u00bd ts p. baki n g soda' , '\u00bd ts p. Diamo n d Crys tal or \u00bc ts p. Mor t o n kosher sal t ' , ' 1 cup ( 2 s t icks) u nsalte d bu tter , cu t i nt o 16 pieces , divided' , ' 1 \u2153 cups ( 173 g) all - purpose fl our' , ' 2 ts p. Diamo n d Crys tal or 1 ts p. Mor t o n kosher sal t ' , ' 1 ts p. baki n g soda' , ' 2 cups ( 200 g) old - fas hio ne d oa ts , divided' , '\u00be cup (packed; 150 g) dark brow n sugar' , '\u00bd cup ( 100 g) gra nulate d sugar' , ' 2 large eggs' , ' 1 Tbsp. va n illa ex tra c t ' ], recipeI nstru c t io ns : [ { '@ t ype' : 'HowToS te p' , te x t : 'Place a rack i n middle o f ove n ; prehea t t o 350 \u00b0. Toas t peca ns o n a small rimmed baki n g shee t , t ossi n g hal f way t hrough , u nt il sligh tl y darke ne d a n d fra gra nt , 8 \u2013 10 mi nutes . Le t cool.' }, { '@ t ype' : 'HowToS te p' , te x t : 'Li ne a n o t her small rimmed baki n g shee t wi t h a Silpa t baki n g ma t . Cook gra nulate d sugar , bu tter , a n d 2 Tbsp. wa ter i n a small saucepa n over medium - low hea t , s t irri n g ge ntl y wi t h a hea t proo f rubber spa tula , u nt il sugar is dissolved. I n crease hea t t o medium a n d bri n g syrup t o a rapid simmer. Cook , wi t hou t s t irri n g , swirli n g pa n o ften , u nt il syrup turns a deep amber color , 8 \u2013 10 mi nutes . Immedia tel y remove saucepa n fr om hea t a n d s t ir i n peca ns . O n ce peca ns are well coa te d , add baki n g soda a n d sal t a n d s t ir t o i n corpora te (mix ture will f oam a n d spu tter as baki n g soda aera tes caramel). Worki n g quickly (i t will harde n fast ) , scrape mix ture o nt o prepared baki n g shee t a n d spread i nt o a t hi n layer. Le t cool comple tel y , 5 \u2013 10 mi nutes . Chop i nt o pea - size pieces; se t aside.' }, { '@ t ype' : 'HowToS te p' , te x t : 'Place hal f o f bu tter (\u00bd cup) i n t he bowl o f a s tan d mixer. Bri n g remai n i n g bu tter t o a boil i n a small saucepa n over medium - low hea t , s t irri n g o ften wi t h a hea t proo f rubber spa tula . Cook , scrapi n g bo tt om a n d sides o f pa n co nstantl y , u nt il bu tter spu tters , f oams , a n d , eve ntuall y , you see brow ne d bi ts fl oa t i n g o n t he sur fa ce , 5 \u2013 7 mi nutes . Pour brow n bu tter over bu tter i n s tan d mixer bowl , maki n g sure t o scrape i n all t he brow ne d bi ts . Le t si t u nt il bu tter begi ns t o resolidi f y , abou t 30 mi nutes .' }, { '@ t ype' : 'HowToS te p' , te x t : 'Pulse fl our , sal t , a n d baki n g soda i n a f ood processor t o combi ne . Add hal f o f reserved peca n bri ttle a n d 1 cup oa ts ; process i n lo n g pulses u nt il oa ts a n d bri ttle are f i nel y grou n d.' }, { '@ t ype' : 'HowToS te p' , te x t : 'Add brow n sugar a n d gra nulate d sugar t o bu tter a n d bea t wi t h paddle a tta chme nt o n medium speed u nt il ligh t a n d smoo t h bu t n o t fluff y , abou t 2 mi nutes . Scrape dow n sides o f bowl a n d add eggs a n d va n illa. Bea t u nt il very ligh t a n d sa t i n y , abou t 1 mi nute . Scrape dow n sides o f bowl a n d add fl our mix ture ; bea t o n low speed u nt il n o dry spo ts remai n a n d you have a so ft , eve nl y mixed dough. Add remai n i n g hal f o f bri ttle a n d remai n i n g 1 cup oa ts ; mix o n low speed jus t t o dis tr ibu te . Fold ba tter several t imes wi t h a spa tula t o e nsure every t hi n g is eve nl y mixed.' }, { '@ t ype' : 'HowToS te p' , te x t : 'Usi n g a 2- oz. scoop or \u00bc - cup measuri n g cup , scoop level por t io ns o f dough t o make 18 cookies. Place o n a parchme nt - li ne d baki n g shee t , spaci n g as close t oge t her as possible (you\u2019ll space t hem ou t be f ore baki n g). Cover t igh tl y wi t h plas t ic wrap a n d chill a t leas t 12 hours a n d up t o 2 days. (I f you\u2019re pressed f or t ime , a couple hours will do; cookies jus t wo n \u2019 t be as chewy.)' }, { '@ t ype' : 'HowToS te p' , te x t : 'Whe n ready t o bake , place racks i n upper a n d lower t hirds o f ove n ; prehea t t o 350 \u00b0. Li ne 2 large rimmed baki n g shee ts wi t h parchme nt paper. Arra n ge 6 cookies o n each prepared baki n g shee t , spaci n g a t leas t 3 \" apart.' }, { '@type': 'HowToStep', text: 'Bake cookies, rotating baking sheets top to bottom and front to back after 12 minutes, until dark golden brown around the edges, 16\u201320 minutes. Let cookies cool 5 minutes on baking sheets, then transfer cookies to a wire rack with a spatula and let cool completely.' }, { '@type': 'HowToStep', text: 'Carefully move a rack to middle of oven. Arrange remaining dough on one of the baking sheets (it\u2019s okay if it\u2019s still warm). Bake as before (this batch might go a bit faster).\\nDo ahead: Dough can be formed 2 months ahead; chill dough balls at least 2 hours before transferring to freezer. Once frozen solid, store in resealable plastic freezer bags and keep frozen. No need to thaw before baking, but you may need to add a minute or two to the baking time. Cookies can be baked 5 days ahead; store airtight at room temperature.' } ], slug: 'oat-and-pecan-brittle-cookies', tags: [], categories: [], dateAdded: ISODate('2020-12-07T05:55:35.434Z'), notes: [], orgURL: 'https://www.bonappetit.com/recipe/oat-and-pecan-brittle-cookies', rating: 3 }","title":"Example"},{"location":"getting-started/site-settings/","text":"Danger As this is still a BETA It is recommended that you backup your data often and store in more than one place. Ad-hear to backup best practices with the 3-2-1 Backup Rule General Settings In your site settings page you can select several options to change the layout of your homepage. You can choose to display the recent recipes, how many cards to show for each section, and which category sections to display. You can additionally select which language to use by default. Note the currently homepage settings are saved in your browser. In the future a database entry will be made for site settings so the homepage is consistent across users. Theme Settings Color themes can be created and set from the UI in the settings page. You can select an existing color theme or create a new one. On creation of a new color theme, the default colors will be used, then you can select and save as you'd like. By default the \"default\" theme will be loaded for all new users visiting the site. All created color themes are available to all users of the site. Theme Colors will be set for both light and dark modes. Note Theme data is stored in localstorage in the browser. Calling \"Save colors and apply theme will refresh the local storage with the selected theme as well save the theme to the database. Backups Site backups can easily be taken and download from the UI. To import, simply select the backup you'd like to restore and check which items you'd like to import. Meal Planner In the meal planner section you can select categories to be used as apart of the random recipe selector in the meal plan creator. Meal planner webhooks are post requests sent from Mealie to an external endpoint. The body of the message is the Recipe JSON of the scheduled meal. If no meal is schedule, no request is sent. The webhook functionality can be enabled or disabled as well as scheduled. Note that you must \"Save Webhooks\" prior to any changes taking affect server side.","title":"Site Settings"},{"location":"getting-started/site-settings/#general-settings","text":"In your site settings page you can select several options to change the layout of your homepage. You can choose to display the recent recipes, how many cards to show for each section, and which category sections to display. You can additionally select which language to use by default. Note the currently homepage settings are saved in your browser. In the future a database entry will be made for site settings so the homepage is consistent across users.","title":"General Settings"},{"location":"getting-started/site-settings/#theme-settings","text":"Color themes can be created and set from the UI in the settings page. You can select an existing color theme or create a new one. On creation of a new color theme, the default colors will be used, then you can select and save as you'd like. By default the \"default\" theme will be loaded for all new users visiting the site. All created color themes are available to all users of the site. Theme Colors will be set for both light and dark modes. Note Theme data is stored in localstorage in the browser. Calling \"Save colors and apply theme will refresh the local storage with the selected theme as well save the theme to the database.","title":"Theme Settings"},{"location":"getting-started/site-settings/#backups","text":"Site backups can easily be taken and download from the UI. To import, simply select the backup you'd like to restore and check which items you'd like to import.","title":"Backups"},{"location":"getting-started/site-settings/#meal-planner","text":"In the meal planner section you can select categories to be used as apart of the random recipe selector in the meal plan creator. Meal planner webhooks are post requests sent from Mealie to an external endpoint. The body of the message is the Recipe JSON of the scheduled meal. If no meal is schedule, no request is sent. The webhook functionality can be enabled or disabled as well as scheduled. Note that you must \"Save Webhooks\" prior to any changes taking affect server side.","title":"Meal Planner"}]}